<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>comp</Title>
      <Shortcut>comp</Shortcut>
      <Description>Code snippet to help you make properties based on 'Computed&lt;T&gt;', an Assisticant class that represents a value computed based on one or more Observables. Note: in most cases you should just write a normal property instead of using Computed&lt;T&gt;. Computed&lt;T&gt; is useful to cache the result of a computation when the value of the property is expensive to compute.</Description>
      <Author>David Piepgrass</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>type</ID>
          <Default>string</Default>
          <ToolTip>Data type</ToolTip>
        </Literal>
        <Literal>
          <ID>name</ID>
          <Default>ComputedProperty</Default>
          <ToolTip>A name for this computed property</ToolTip>
        </Literal>
        <Literal>
          <ID>expr</ID>
          <Default>TODO</Default>
          <ToolTip>Write an expression here to compute the value of the Computed</ToolTip>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[private Computed<$type$> _$name$;
        public $type$ $name$
        {
            get
            {
                return _$name$ == null
                    ? _$name$ = new Computed<$type$>(() => $expr$);
                    : _$name$.Value;
            }
        }]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>